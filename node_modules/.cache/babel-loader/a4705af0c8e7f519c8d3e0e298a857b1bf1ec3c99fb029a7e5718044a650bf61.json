{"ast":null,"code":"// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getFirestore } from \"firebase/firestore\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCYA7jpfHFOqQFTmGBKV_S1frbLKfqbZpg\",\n  authDomain: \"todo-app-8d7a4.firebaseapp.com\",\n  projectId: \"todo-app-8d7a4\",\n  storageBucket: \"todo-app-8d7a4.appspot.com\",\n  messagingSenderId: \"482965766302\",\n  appId: \"1:482965766302:web:de74ce938a73b02b26bb8f\",\n  measurementId: \"G-5DSQW8WHZH\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\nconst db = getFirestore(app);\nexport { db };\n\n//initialize accounts\nconst googleProvider = new GoogleAuthProvider();\nconst signInWithGoogle = async () => {\n  try {\n    const res = await signInWithPopup(auth, googleProvider);\n    const user = res.user;\n    const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user.uid));\n    const docs = await getDocs(q);\n    if (docs.docs.length === 0) {\n      await addDoc(collection(db, \"users\"), {\n        uid: user.uid,\n        name: user.displayName,\n        authProvider: \"google\",\n        email: user.email\n      });\n    }\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};","map":{"version":3,"names":["initializeApp","getAnalytics","getFirestore","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","analytics","db","googleProvider","GoogleAuthProvider","signInWithGoogle","res","signInWithPopup","auth","user","q","query","collection","where","uid","docs","getDocs","length","addDoc","name","displayName","authProvider","email","err","console","error","alert","message"],"sources":["/home/lynn/todo-app/src/firebase.js"],"sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getFirestore } from \"firebase/firestore\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCYA7jpfHFOqQFTmGBKV_S1frbLKfqbZpg\",\n  authDomain: \"todo-app-8d7a4.firebaseapp.com\",\n  projectId: \"todo-app-8d7a4\",\n  storageBucket: \"todo-app-8d7a4.appspot.com\",\n  messagingSenderId: \"482965766302\",\n  appId: \"1:482965766302:web:de74ce938a73b02b26bb8f\",\n  measurementId: \"G-5DSQW8WHZH\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\nconst db = getFirestore(app);\n\nexport {db};\n\n//initialize accounts\nconst googleProvider = new GoogleAuthProvider();\nconst signInWithGoogle = async () => {\n  try {\n    const res = await signInWithPopup(auth, googleProvider);\n    const user = res.user;\n    const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user.uid));\n    const docs = await getDocs(q);\n    if (docs.docs.length === 0) {\n      await addDoc(collection(db, \"users\"), {\n        uid: user.uid,\n        name: user.displayName,\n        authProvider: \"google\",\n        email: user.email,\n      });\n    }\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};"],"mappings":"AAAA;AACA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,YAAY,QAAQ,oBAAoB;AACjD,SAASC,YAAY,QAAQ,oBAAoB;AACjD;AACA;;AAEA;AACA;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,gCAAgC;EAC5CC,SAAS,EAAE,gBAAgB;EAC3BC,aAAa,EAAE,4BAA4B;EAC3CC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE,2CAA2C;EAClDC,aAAa,EAAE;AACjB,CAAC;;AAED;AACA,MAAMC,GAAG,GAAGX,aAAa,CAACG,cAAc,CAAC;AACzC,MAAMS,SAAS,GAAGX,YAAY,CAACU,GAAG,CAAC;AACnC,MAAME,EAAE,GAAGX,YAAY,CAACS,GAAG,CAAC;AAE5B,SAAQE,EAAE;;AAEV;AACA,MAAMC,cAAc,GAAG,IAAIC,kBAAkB,EAAE;AAC/C,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EACnC,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMC,eAAe,CAACC,IAAI,EAAEL,cAAc,CAAC;IACvD,MAAMM,IAAI,GAAGH,GAAG,CAACG,IAAI;IACrB,MAAMC,CAAC,GAAGC,KAAK,CAACC,UAAU,CAACV,EAAE,EAAE,OAAO,CAAC,EAAEW,KAAK,CAAC,KAAK,EAAE,IAAI,EAAEJ,IAAI,CAACK,GAAG,CAAC,CAAC;IACtE,MAAMC,IAAI,GAAG,MAAMC,OAAO,CAACN,CAAC,CAAC;IAC7B,IAAIK,IAAI,CAACA,IAAI,CAACE,MAAM,KAAK,CAAC,EAAE;MAC1B,MAAMC,MAAM,CAACN,UAAU,CAACV,EAAE,EAAE,OAAO,CAAC,EAAE;QACpCY,GAAG,EAAEL,IAAI,CAACK,GAAG;QACbK,IAAI,EAAEV,IAAI,CAACW,WAAW;QACtBC,YAAY,EAAE,QAAQ;QACtBC,KAAK,EAAEb,IAAI,CAACa;MACd,CAAC,CAAC;IACJ;EACF,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IAClBG,KAAK,CAACH,GAAG,CAACI,OAAO,CAAC;EACpB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}