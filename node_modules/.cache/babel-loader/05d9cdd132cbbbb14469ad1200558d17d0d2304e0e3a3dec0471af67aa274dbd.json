{"ast":null,"code":"// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { GoogleAuthProvider, getAuth, signInWithPopup, signInWithEmailAndPassword, createUserWithEmailAndPassword, sendPasswordResetEmail, signOut } from \"firebase/auth\";\nimport { getFirestore, query, getDocs, collection, where, addDoc } from \"firebase/firestore\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCYA7jpfHFOqQFTmGBKV_S1frbLKfqbZpg\",\n  authDomain: \"todo-app-8d7a4.firebaseapp.com\",\n  projectId: \"todo-app-8d7a4\",\n  storageBucket: \"todo-app-8d7a4.appspot.com\",\n  messagingSenderId: \"482965766302\",\n  appId: \"1:482965766302:web:de74ce938a73b02b26bb8f\",\n  measurementId: \"G-5DSQW8WHZH\"\n};\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst db = getFirestore(app);\nconst auth = getAuth(app);\n\n//for making the authentication with google\nconst googleProvider = new GoogleAuthProvider();\nconst signInWithGoogle = async () => {\n  try {\n    const res = await signInWithPopup(auth, googleProvider);\n    const user = res.user;\n    const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user.uid));\n    const docs = await getDocs(q);\n    if (docs.docs.length === 0) {\n      await addDoc(collection(db, \"users\"), {\n        uid: user.uid,\n        name: user.displayName,\n        authProvider: \"google\",\n        email: user.email\n      });\n    }\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\nconst logInWithEmailAndPassword = async (email, password) => {\n  try {\n    await signInWithEmailAndPassword(auth, email, password);\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\nconst registerWithEmailAndPassword = async (name, email, password) => {\n  try {\n    const res = await createUserWithEmailAndPassword(auth, email, password);\n    const user = res.user;\n    await addDoc(collection(db, \"users\"), {\n      uid: user.uid,\n      name,\n      authProvider: \"local\",\n      email\n    });\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\nconst sendPasswordReset = async email => {\n  try {\n    await sendPasswordResetEmail(auth, email);\n    alert(\"Password reset link sent!\");\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\nconst logout = () => {\n  signOut(auth);\n};\nexport { db, auth, signInWithGoogle, logInWithEmailAndPassword, sendPasswordReset, logout, registerWithEmailAndPassword };\n\n//https://blog.logrocket.com/user-authentication-firebase-react-apps/","map":{"version":3,"names":["initializeApp","GoogleAuthProvider","getAuth","signInWithPopup","signInWithEmailAndPassword","createUserWithEmailAndPassword","sendPasswordResetEmail","signOut","getFirestore","query","getDocs","collection","where","addDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","db","auth","googleProvider","signInWithGoogle","res","user","q","uid","docs","length","name","displayName","authProvider","email","err","console","error","alert","message","logInWithEmailAndPassword","password","registerWithEmailAndPassword","sendPasswordReset","logout"],"sources":["/home/lynn/todo-app/src/firebase.js"],"sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { GoogleAuthProvider , getAuth , signInWithPopup, signInWithEmailAndPassword, createUserWithEmailAndPassword, sendPasswordResetEmail,signOut,\n } from \"firebase/auth\";\nimport {getFirestore,query,getDocs,collection,where,addDoc,\n}from \"firebase/firestore\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCYA7jpfHFOqQFTmGBKV_S1frbLKfqbZpg\",\n  authDomain: \"todo-app-8d7a4.firebaseapp.com\",\n  projectId: \"todo-app-8d7a4\",\n  storageBucket: \"todo-app-8d7a4.appspot.com\",\n  messagingSenderId: \"482965766302\",\n  appId: \"1:482965766302:web:de74ce938a73b02b26bb8f\",\n  measurementId: \"G-5DSQW8WHZH\"\n};\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst db = getFirestore(app);\n\nconst auth = getAuth(app);\n\n//for making the authentication with google\nconst googleProvider = new GoogleAuthProvider();\nconst signInWithGoogle = async () => {\n  try {\n    const res = await signInWithPopup(auth, googleProvider);\n    const user = res.user;\n    const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user.uid));\n    const docs = await getDocs(q);\n    if (docs.docs.length === 0) {\n      await addDoc(collection(db, \"users\"), {\n        uid: user.uid,\n        name: user.displayName,\n        authProvider: \"google\",\n        email: user.email,\n      });\n    }\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst logInWithEmailAndPassword = async (email, password) => {\n  try {\n    await signInWithEmailAndPassword(auth, email, password);\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst registerWithEmailAndPassword = async (name, email, password) => {\n  try {\n    const res = await createUserWithEmailAndPassword(auth, email, password);\n    const user = res.user;\n    await addDoc(collection(db, \"users\"), {\n      uid: user.uid,\n      name,\n      authProvider: \"local\",\n      email,\n    });\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst sendPasswordReset = async (email) => {\n  try {\n    await sendPasswordResetEmail(auth, email);\n    alert(\"Password reset link sent!\");\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst logout = () => {\n  signOut(auth);\n};\n\n\n\n\n\nexport { db, auth , signInWithGoogle,logInWithEmailAndPassword, sendPasswordReset,logout, registerWithEmailAndPassword };\n\n//https://blog.logrocket.com/user-authentication-firebase-react-apps/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}